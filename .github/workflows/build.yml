# .github/workflows/build.yml
name: Build and release desktop apps

on:
  push:
    tags:
      - "v*"
    branches:
      - main
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.11"
  APP_NAME: "NewsEnv"
  APP_ENTRY: "news_gui.py"
  PYSIMPLEGUI_INDEX: "https://PySimpleGUI.net/install"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - run: |
          python -m pip install --upgrade pip
          python -m pip install "poetry>=1.8"
          poetry config virtualenvs.in-project true
          poetry source add --priority explicit pysimplegui "${{ env.PYSIMPLEGUI_INDEX }}"
          poetry install --with dev
          poetry add PySimpleGUI --source pysimplegui || true

      - name: Build with PyInstaller (macOS)
        if: matrix.os == 'macos-latest'
        env:
          TK_SILENCE_DEPRECATION: "1"
        run: |
          poetry run pyinstaller --name "${APP_NAME}" --windowed "${APP_ENTRY}"
          cd dist
          if [ -d "${APP_NAME}.app" ]; then zip -r "${APP_NAME}-macOS.app.zip" "${APP_NAME}.app"; fi
          cd -

      - name: Build with PyInstaller (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: poetry run pyinstaller --name "$env:APP_NAME" --onefile --windowed "$env:APP_ENTRY"

      - uses: actions/upload-artifact@v4
        if: matrix.os == 'macos-latest'
        with:
          name: ${{ env.APP_NAME }}-macOS
          path: dist/${{ env.APP_NAME }}-macOS.app.zip
          if-no-files-found: ignore

      - uses: actions/upload-artifact@v4
        if: matrix.os == 'windows-latest'
        with:
          name: ${{ env.APP_NAME }}-Windows
          path: dist/${{ env.APP_NAME }}.exe
          if-no-files-found: ignore

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-macOS
          path: dist-mac
      - uses: actions/download-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-Windows
          path: dist-win
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist-mac/${{ env.APP_NAME }}-macOS.app.zip
            dist-win/${{ env.APP_NAME }}.exe
